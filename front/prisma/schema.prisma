// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

enum ScrapingStatus {
  pending
  success
  error
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Meal {
  id           Int        @id @default(autoincrement())
  date         DateTime
  title        String
  food_items   String
  meal_type    String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int
}

model Restaurant {
  id                   Int            @id @default(autoincrement())
  name                 String
  place                String
  schedule             String
  url                  String         @unique
  cp                   String
  address              String
  city                 String
  phone                String
  img                  String
  lat                  Float?
  lng                  Float?
  crous                Crous          @relation(fields: [crousId], references: [id])
  crousId              Int
  last_scraping_at     DateTime?
  last_scraping_status ScrapingStatus @default(pending)
  last_scraping_error  String?
  created_at           DateTime       @default(now())
  updated_at           DateTime       @updatedAt
  meals                Meal[]
}

model ScrapingLog {
  id         Int            @id @default(autoincrement())
  crous      Crous          @relation(fields: [crousId], references: [id])
  crousId    Int
  status     ScrapingStatus
  error      String?
  started_at DateTime
  ended_at   DateTime
}

model GlobalStats {
  id               Int      @id @default(autoincrement())
  date             DateTime
  totalRestaurants Int
  totalMeals       Int
}

model Announcement {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  img        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Crous {
  id          Int           @id @default(autoincrement())
  name        String
  url         String
  restaurant  Restaurant[]
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  ScrapingLog ScrapingLog[]
}
